name: Build and Test CLKernel

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build-windows:
    runs-on: windows-latest
    name: Build CLKernel on Windows
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup NASM
      run: |
        Invoke-WebRequest -Uri "https://www.nasm.us/pub/nasm/releasebuilds/2.16.01/win64/nasm-2.16.01-win64.zip" -OutFile "nasm.zip"
        Expand-Archive -Path "nasm.zip" -DestinationPath "C:\nasm"
        echo "C:\nasm\nasm-2.16.01" >> $env:GITHUB_PATH
    
    - name: Setup MinGW-w64
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        install: >-
          mingw-w64-x86_64-gcc
          mingw-w64-x86_64-binutils
          make
    
    - name: Setup QEMU
      run: |
        choco install qemu --version 2023.8.24
        echo "C:\Program Files\qemu" >> $env:GITHUB_PATH
    
    - name: Verify tools
      shell: msys2 {0}
      run: |
        nasm -v
        gcc --version
        qemu-system-i386 --version
    
    - name: Build kernel
      shell: msys2 {0}
      run: |
        ./build.bat
    
    - name: Test boot (headless)
      shell: msys2 {0}
      run: |
        timeout 30 qemu-system-i386 -nographic -serial stdio -drive format=raw,file=clkernel_professional_handcrafted.img -no-reboot || true
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: clkernel-build-windows
        path: |
          *.img
          build/*.bin
          build/*.elf

  build-linux:
    runs-on: ubuntu-latest
    name: Build CLKernel on Linux
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y nasm gcc-multilib qemu-system-x86 build-essential
        
        # Install cross-compiler if needed
        sudo apt-get install -y gcc-i686-linux-gnu || true
    
    - name: Verify tools
      run: |
        nasm -v
        gcc --version
        qemu-system-i386 --version
    
    - name: Build with Makefile
      run: |
        make clean
        make
    
    - name: Test boot (headless)
      run: |
        timeout 30 make run-headless || true
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: clkernel-build-linux
        path: |
          build/*.img
          build/*.bin
          build/*.elf

  code-quality:
    runs-on: ubuntu-latest
    name: Code Quality Checks
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Check file structure
      run: |
        # Verify essential files exist
        test -f README.md
        test -f LICENSE
        test -f CONTRIBUTING.md
        test -f Makefile
        test -d kernel/
        test -d boot/
    
    - name: Check for TODO/FIXME comments
      run: |
        echo "Checking for TODO/FIXME comments..."
        grep -r "TODO\|FIXME\|HACK\|XXX" --include="*.c" --include="*.h" --include="*.asm" . || true
    
    - name: Verify build artifacts not committed
      run: |
        # Check that build artifacts are properly gitignored
        if find . -name "*.bin" -o -name "*.img" -o -name "*.o" -o -name "*.elf" | grep -v "/test/" | head -1; then
          echo "Error: Build artifacts found in repository"
          exit 1
        fi
        echo "OK: No build artifacts found"
    
    - name: Check documentation
      run: |
        # Verify key documentation sections exist
        grep -q "Installation" README.md
        grep -q "Building" README.md
        grep -q "Features" README.md
